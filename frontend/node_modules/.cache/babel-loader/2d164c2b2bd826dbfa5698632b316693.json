{"ast":null,"code":"import _classCallCheck from \"/Users/pandora/GIT/WeatherMERN/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/pandora/GIT/WeatherMERN/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/pandora/GIT/WeatherMERN/frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/pandora/GIT/WeatherMERN/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/pandora/GIT/WeatherMERN/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/pandora/GIT/WeatherMERN/frontend/src/App.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport moment from 'moment';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      data: []\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      axios.get('http://localhost:3001/api/v1/today').then(function (res) {\n        if (res.status === 200) {\n          _this2.setState({\n            data: res.data\n          });\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, this.state.data.map(function (weather) {\n        return React.createElement(\"div\", {\n          key: weather.time,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20\n          },\n          __self: this\n        }, \"[\", moment(weather.time).format('MM/DD/YYYY hh:mm'), \"]: \", parseFloat(weather.temp - 273.15).toFixed(2), \" \\u2103\");\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/pandora/GIT/WeatherMERN/frontend/src/App.js"],"names":["React","Component","axios","moment","App","state","data","get","then","res","status","setState","map","weather","time","format","parseFloat","temp","toFixed"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,QAAnB;;IAEMC,G;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,IAAI,EAAE;AADA,K;;;;;;wCAGY;AAAA;;AAClBJ,MAAAA,KAAK,CAACK,GAAN,CAAU,oCAAV,EAAgDC,IAAhD,CAAqD,UAAAC,GAAG,EAAI;AAC1D,YAAIA,GAAG,CAACC,MAAJ,KAAe,GAAnB,EAAwB;AACtB,UAAA,MAAI,CAACC,QAAL,CAAc;AAAEL,YAAAA,IAAI,EAAEG,GAAG,CAACH;AAAZ,WAAd;AACD;AACF,OAJD;AAKD;;;6BACQ;AACP,aACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKD,KAAL,CAAWC,IAAX,CAAgBM,GAAhB,CAAoB,UAAAC,OAAO;AAAA,eAC1B;AAAK,UAAA,GAAG,EAAEA,OAAO,CAACC,IAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACKX,MAAM,CAACU,OAAO,CAACC,IAAT,CAAN,CAAqBC,MAArB,CAA4B,kBAA5B,CADL,SAC0DC,UAAU,CAACH,OAAO,CAACI,IAAR,GAAe,MAAhB,CAAV,CAAkCC,OAAlC,CAA0C,CAA1C,CAD1D,YAD0B;AAAA,OAA3B,CADH,CADF;AASD;;;;EArBejB,S;;AAwBlB,eAAeG,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport moment from 'moment';\n\nclass App extends Component {\n  state = {\n    data: []\n  };\n  componentDidMount() {\n    axios.get('http://localhost:3001/api/v1/today').then(res => {\n      if (res.status === 200) {\n        this.setState({ data: res.data });\n      }\n    });\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        {this.state.data.map(weather => (\n          <div key={weather.time}>\n            [{ moment(weather.time).format('MM/DD/YYYY hh:mm') }]: {parseFloat(weather.temp - 273.15).toFixed(2)} &#8451;\n          </div>\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}